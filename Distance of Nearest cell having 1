class Solution:

    #Function to find distance of nearest 1 in the grid for each cell.
    
	def nearest(self, grid):
		#Code here
		m = len(grid)
		n = len(grid[0])
		
		vis = [[0 for j in  range(n)] for i in range(m)]
		dist = [[0 for j in  range(n)] for i in range(m)] 
		q = []
		
		for i in range(m):
		    for j in range(n):
		        if grid[i][j] == 1:
		            q.append(((i,j),0))
		            vis[i][j] = 1
		            
		        
		            
		dr = [-1,0,1,0]
		dc = [0,1,0,-1] 
		
		while  q:
		    row = q[0][0][0]
		    col = q[0][0][1]
		    step = q[0][1]
		    
		    q.pop(0)
		    
		    dist[row][col] = step
		    
		    
		    for i in range(4):
		        nrow = row + dr[i]
		        ncol = col + dc[i]
		        if nrow  >= 0 and nrow < m and ncol >= 0 and ncol < n and vis[nrow][ncol]==0:
		            vis[nrow][ncol] = 1
		            q.append(((nrow,ncol),step + 1))
		            
		return dist
		            
		    
		    
		    
		    


#{ 
 # Driver Code Starts

if __name__ == '__main__':
	T=int(input())
	for i in range(T):
		n, m = map(int, input().split())
		grid = []
		for _ in range(n):
			a = list(map(int, input().split()))
			grid.append(a)
		obj = Solution()
		ans = obj.nearest(grid)
		for i in ans:
			for j in i:
				print(j, end = " ")
			print()

# } Driver Code Ends
