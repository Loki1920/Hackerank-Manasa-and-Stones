class Solution:
    def sub(self,list1,list2):
        return all(i in list2 for i in list1)
    def minWindow(self, s: str, t: str) -> str:
        if t=="":return ""
        countT,window = {},{}
        for c in t:
            countT[c] = 1 + countT.get(c,0)
        have,need = 0,len(countT)
        res,resLen = [-1,-1],float('infinity')
        l = 0
        for r in range(len(s)):
            c = s[r]
            window[c] = 1 + window.get(c,0)
            if c in countT and window[c] == countT[c]:
                have +=1
            while have == need:
                if (r-l+1) < resLen:
                    res = [l,r]
                    resLen = (r-l+1)
                window[s[l]] -= 1
                if s[l] in countT and window[s[l]] < countT[s[l]]:
                    have -= 1
                l += 1
        l,r = res
        return s[l:r+1] if resLen != float('infinity') else ''



        '''
        m = 987654321
        res = []
        if len(t) > len(s):
            return ''
        if t==s:
            return t

        for i in range(len(s)):
            for j in  range(i+1,len(s)+1):
                if self.sub(list(t),list(s[i:j])):
                    if len(s[i:j]) <= m and len(s[i:j]) >= len(t):
                        for k in t:
                            if  t.count(k) > s[i:j].count(k):
                                break
                            m = len(s[i:j])
                            res.append(s[i:j])
        if m==987654321:
            return ''
        else:
            return res[-1]
            '''

        
