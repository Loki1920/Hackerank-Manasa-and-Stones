# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def isPalindrome(self, head: Optional[ListNode]) -> bool:
        s = head
        f = head 

        while f and f.next:
            f = f.next.next
            s = s.next 
        
        prev = None
        curr = s
        while s:
            nxt = s.next
            s.next = prev
            prev = s 
            s = nxt 
        left,right = head,prev 

        while right:
            if left.val != right.val:
                return False 
            left = left.next 
            right = right.next 
        return True

        '''
        l = []
        while head:
            l.append(head.val)
            head = head.next 
        left ,right = 0, len(l)-1 

        while left <= right:
            if  l[left] != l[right]:
                return False
            left += 1
            right -= 1
        return True
        '''
        
