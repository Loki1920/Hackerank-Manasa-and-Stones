#User function Template for python3
class Solution:
    
    mat  = [[1,2,3],[4,5,6],[7,8,9],[-1,0,-1]]
    def solve(self,i,j,n,dp):
        mat  = [[1,2,3],[4,5,6],[7,8,9],[-1,0,-1]]
        if n==1:
            return 1
        if dp[mat[i][j]][n] != -1:
            return dp[mat[i][j]][n] 
        a = self.solve(i,j,n-1,dp)
        
        b=c=d=e = 0
        if j-1 >= 0 and mat[i][j-1] != -1:
            b = self.solve(i,j-1,n-1,dp)
        if j + 1 < 3 and mat[i][j+1] != -1:
            c = self.solve(i,j+1,n-1,dp)
        if i -1>=0 and mat[i-1][j]  != -1:
            d = self.solve(i-1,j,n-1,dp)
        if i +1 < 4 and mat[i+1][j] != -1:
            e = self.solve(i+1,j,n-1,dp)
            
        dp[mat[i][j]][n] = a + b + c + d + e 
            
        return dp[mat[i][j]][n]
            
        
	def getCount(self, N):
	    mat  = [[1,2,3],[4,5,6],[7,8,9],[-1,0,-1]]
		# code here
		dp = [[-1 for i in range(N+1)] for j in  range(10)]
		ans = 0
		
		for i in range(4):
		    for j in range(3):
		        if mat[i][j] != -1:
		            ans += self.solve(i,j,N,dp)
	    return ans 


#{ 
 # Driver Code Starts
#Initial Template for Python 3

if __name__ == '__main__':
	T=int(input())
	for i in range(T):
		N = int(input())
		ob = Solution()
		ans = ob.getCount(N)
		print(ans)

# } Driver Code Ends
