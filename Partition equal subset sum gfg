# User function Template for Python3


class Solution:
    def subsetsum(self,arr,k):
        n = len(arr)
        dp = ([[False for i in range(k+1)] for j in range(len(arr)+1) ])
        
        for i in range(n+1):
            dp[i][0] = True
        for j in range(1,k+1):
            dp[0][i] = False
        
                    
        for i in range(1,n+1):
            for j in range(1,k+1):
                if j < arr[i-1]:
                    dp[i][j] = dp[i-1][j]
                if j >= arr[i-1]:
                    dp[i][j] = dp[i-1][j] or dp[i-1][j-arr[i-1]]
                    
        return dp[n][k]
        
    def equalPartition(self, N, arr):
        if sum(arr) % 2 != 0:
            return False
        elif sum(arr) % 2==0:
            return self.subsetsum(arr,sum(arr)//2)
        
                
        
        


#{ 
 # Driver Code Starts
# Initial Template for Python3

import sys
input = sys.stdin.readline
if __name__ == '__main__':
    t = int(input())
    for _ in range(t):
        N = int(input())
        arr = input().split()
        for it in range(N):
            arr[it] = int(arr[it])
        
        ob = Solution()
        if (ob.equalPartition(N, arr) == 1):
            print("YES")
        else:
            print("NO")
# } Driver Code Ends
