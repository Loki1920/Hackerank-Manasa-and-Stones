mport numpy as np
class Solution:
    def productExceptSelf(self, nums: List[int]) -> List[int]:
        res = [1] * len(nums)
        left = [1] * len(nums)
        right = [1] * len(nums)

        left[0] = 1
        for i in  range(1,len(nums)):
            left[i] = left[i-1] * nums[i-1]
        right[len(nums)-1] = 1
        for i in range(len(nums)-2,-1,-1):
            right[i] = right[i+1] * nums[i+1]
        
        for i in range(len(nums)):
            res[i] = left[i] * right[i]

        return res

        '''
        res = []
        p = 1
        for i in  range(len(nums)):
            r1 = np.prod(nums[:i]) * np.prod(nums[i+1:])
            res.append(int(r1))
        return res
        '''
