from typing import List

from itertools import permutations
class Solution:
    def maxEqualSum(self, N1:int,N2:int,N3:int, S1 : List[int], S2 : List[int], S3 : List[int]) -> int:
        # code here
        
        sum1,sum2,sum3 = 0,0,0
        
        for i in range(N1):
            sum1 += S1[i]
        for i in range(N2):
            sum2 += S2[i]
        for i in range(N3):
            sum3 += S3[i]
        
        t1,t2,t3=0,0,0
        
        ans = 0
        while 1:
            if t1==N1 or t2==N2 or t3 == N3:
                return 0
            if sum1==sum2 and sum2 == sum3:
                return sum1
            if sum1 >= sum2 and sum1 >= sum3:
                sum1 -= S1[t1]
                t1 += 1
            if sum2 >= sum1 and sum2 >= sum3:
                sum2 -= S2[t2]
                t2 += 1
            if sum3 >= sum1 and sum3 >= sum2:
                sum3 -= S3[t3]
                t3 += 1
                
        
        



#{ 
 # Driver Code Starts
class IntArray:
    def __init__(self) -> None:
        pass
    def Input(self,n):
        arr=[int(i) for i in input().strip().split()]#array input
        return arr
    def Print(self,arr):
        for i in arr:
            print(i,end=" ")
        print()


if __name__=="__main__":
    t = int(input())
    for _ in range(t):
        
        a=IntArray().Input(3)
        
        
        S1=IntArray().Input(a[0])
        
        
        S2=IntArray().Input(a[1])
        
        
        S3=IntArray().Input(a[2])
        
        obj = Solution()
        res = obj.maxEqualSum(a[0],a[1],a[2], S1, S2, S3)
        
        print(res)
        

# } Driver Code Ends
