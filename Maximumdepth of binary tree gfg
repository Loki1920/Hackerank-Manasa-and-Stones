# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def maxDepth(self, root: Optional[TreeNode]) -> int:
        if root == None:
            return 0
        def chk(r):
            if r.left == None and r.right == None :
                return 1
            if r.left == None and r.right != None:
                mx = chk(r.right)+1
                return mx
            if r.left != None and r.right == None:
                mx = chk(r.left)+1
                return mx
            else:
                mx = max(chk(r.left),chk(r.right))
                mx += 1
                return mx
            

        return chk(root)
