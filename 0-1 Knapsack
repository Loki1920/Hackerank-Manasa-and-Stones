#User function Template for python3

class Solution:
    
    #Function to return max value that can be put in knapsack of capacity W.
    def knapSack(self,W, wt, val, n):
        if n==0 or W == 0:
            return 0
        if wt[n-1] <= W:
            return max(val[n-1] + self.knapSack(W-wt[n-1],wt,val,n-1),self.knapSack(W,wt,val,n-1))
        elif wt[n-1] > W:
            return self.knapSack(W,wt,val,n-1)
       
        # code here


#{ 
 # Driver Code Starts
#Initial Template for Python 3
import atexit
import io
import sys

# Contributed by : Nagendra Jha

if __name__ == '__main__':
    test_cases = int(input())
    for cases in range(test_cases):
        n = int(input())
        W = int(input())
        val = list(map(int,input().strip().split()))
        wt = list(map(int,input().strip().split()))
        ob=Solution()
        print(ob.knapSack(W,wt,val,n))
# } Driver Code Ends
