#User function Template for python3

class Solution:
    def printKClosest(self, arr, n, k, x):
        
        def binarySearch(arr,n,x):
            if arr[0]>x:
               return 0
            if arr[n-1]<x:
               return n-1
 
            low=0
            high=n-1
            while low<=high:
                mid=(low+high)//2
                if arr[mid]==x:
                   return mid
                   break
                elif arr[mid]<x and arr[mid+1]>x:
                    return mid
                    break
                elif arr[mid]>x:
                    high=mid-1
                elif arr[mid]<x:
                    low=mid+1
        mid=binarySearch(arr,n,x)
        
        i=mid
        j=mid+1
        if arr[mid]==x:
           i-=1
        count=0
        ans=[]
        while(count<k and j<n and i>=0):
            if abs(arr[i]-x)<abs(arr[j]-x):
               ans.append(arr[i])
               i-=1
            else:
               ans.append(arr[j])
               j+=1
            count+=1
        
        while (count<k and j<n):
            ans.append(arr[j])
            j+=1
            count+=1
        
        while (count<k and i>=0):
            ans.append(arr[i])
            i-=1
            count+=1
        return ans
        
        
        
        
        
        
       
           
           
           
